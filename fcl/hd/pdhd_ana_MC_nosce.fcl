#
#include "services_refactored_pdune.fcl"
#include "caldata_dune.fcl"
#include "wirecell_dune.fcl"
#include "hitfindermodules_dune.fcl"
#include "SpacePointSolver_dune.fcl"
#include "cluster_dune.fcl"
#include "trackfindermodules_dune.fcl"
#include "pandoramodules_dune.fcl"
#include "calorimetry_pdune.fcl"
#include "calibration_dune.fcl"
#include "featurelabelingmodules.fcl"
#include "particleid.fcl"
#include "mctrutht0matching.fcl"
#include "t0reco.fcl"
#include "opticaldetectormodules_dune.fcl"
#include "Deconvolution.fcl"
#include "OpHitFinderDeco.fcl"
#include "showerfindermodules_dune.fcl"
#include "emshower3d.fcl"
#include "ProtoDUNETriggerFilter.fcl"
#include "OpSlicer.fcl"
#include "CRT.fcl"
#include "T0RecoAnodePiercers.fcl"
#include "numberofhitsfilter.fcl"
#include "services_dune.fcl"
#include "ProtoDUNETruthBeamFilter.fcl"
#include "PDSPAnalyzer.fcl"
#include "tools_dune.fcl"
#include "protodune_tools_dune.fcl"


#

process_name: PDHDAna

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "%ifb_pdhd_ntuple.root" }
  TimeTracker:       {}
  MemoryTracker:     {}
  RandomNumberGenerator: {} #ART native random number generator
  message:                      @local::dune_message_services_prod_debug
  FileCatalogMetadata:  @local::art_file_catalog_mc
                        @table::protodunehd_reco_services
  #PdspChannelMapService:        @local::pdspchannelmap
  #ChannelStatusService:         @local::pdsp_channel_status
  BackTrackerService: {
    BackTracker: {
      SimChannelModuleLabel: "tpcrawdecoder:simpleSC"
      G4ModuleLabel: "largeant"
      MinimumHitEnergyFraction: 1e-1
    }
  }
  FileCatalogMetadataDUNE: { }
  TFileMetadataDUNE: @local::dune_tfile_metadata
}
#services.message.destinations.LogStandardOut.threshold: "INFO"
#services.Geometry: @local::protodunev6_geo
services.TFileMetadataDUNE.dataTier: "root-tuple-virtual"

source:
{
  module_type: RootInput
  maxEvents: -1
  fileNames: ["input_file.root"]
}

physics:
{

 producers: { 
    pandora:            @local::protodunehd_pandora
    pandoraWriter:      @local::dune_pandorawriter
    pandoraTrack:       @local::dune_pandoraTrackCreation
    pandoraShower:      @local::dune_pandoraShowerCreation
    pandoracalo:        @local::pdune_sp_calomcnosce
    pandoracalonosce:   @local::pdune_sp_calomcnosce
    pandorapid:         @local::standard_chi2pid
    pandoracali:        @local::protodunespmcnosce_calibrationdedx
    pandoracalipid:     @local::standard_chi2pid
    pandoraShowercalo:  @local::pdune_sp_showercalomcnosce
    pandoraShowercalonosce:  @local::pdune_sp_showercalomcnosce
    #Anode piercing tracks t0 reconstruction
    anodepiercerst0:    @local::T0RecoAnodePiercers
    ##Producers for forcing pandora to create track or shower objects
    ##for each PFParticle
    pandora2Track:         @local::dune_pandoraTrackCreation
    pandora2calo:          @local::pdune_sp_alltrackcalomcnosce
    pandora2calonosce:     @local::pdune_sp_alltrackcalomcnosce
    pandora2pid:           @local::standard_chi2pid
    pandora2cali:          @local::protodunespmcnosce_calibrationdedx
    pandora2calipid:       @local::standard_chi2pid
    pandora2Shower:        @local::dune_pandoraShowerCreation
    pandora2Showercalo:    @local::pdune_sp_allshowercalomcnosce
    pandora2Showercalonosce:    @local::pdune_sp_allshowercalomcnosce

 }

 #reco: []
 reco: [ fTruth, pandora, pandoraWriter, pandoraTrack, pandoraShower,
         pandoracalo, pandoracalonosce, pandorapid, pandoracali, pandoracalipid,
         pandoraShowercalo, pandoraShowercalonosce, anodepiercerst0,
         pandora2Track, pandora2calo, pandora2calonosce, pandora2pid,
         pandora2cali, pandora2calipid, pandora2Shower, pandora2Showercalo,
         pandora2Showercalonosce ]

 filters: { 
   fTruth: @local::beam_filter
 }

 #fpath: [fTruth]

 analyzers:
 {
  pduneana:          @local::pdspanalysis
 }
 
 ana:  [ pduneana ]

 #stream1: [ out1 ]
 
 end_paths:     [ ana ]

}

outputs: {}
physics.filters.fTruth.PDG: [211, -13, 2212, 321]
physics.filters.fTruth.IsVerbose: true
#physics.analyzers.pduneana.SelectEvents: ["fpath"]
physics.analyzers.pduneana.CalorimetryTagSCE: "pandoracalo"
physics.analyzers.pduneana.CalorimetryTagNoSCE: "pandoracalonosce" ##For no-SCE sample
physics.analyzers.pduneana.Pandora2CaloSCE: "pandora2calo"
physics.analyzers.pduneana.Verbose: false 
physics.analyzers.pduneana.DoReweight: false

physics.analyzers.pduneana.DoProtReweight: false 
physics.analyzers.pduneana.GetTrackMichel: true
physics.analyzers.pduneana.Recalibrate: false
physics.analyzers.pduneana.GetCalibratedShowerEnergy: true
physics.analyzers.pduneana.SCE: false
physics.analyzers.pduneana.SaveHits: false
physics.analyzers.pduneana.SaveHitIDEInfo: false
physics.analyzers.pduneana.SaveG4RWWeights: false 

physics.analyzers.pduneana.CalibrationParsSCE: @local::CalorimetryParameters_SPProd4_MC_SCE #_eLT
physics.analyzers.pduneana.CalibrationParsNoSCE: @local::CalorimetryParameters_SPProd4_MC_SCE #_eLT

services.ParticleInventoryService.ParticleInventory.EveIdCalculator: "EmEveIdCalculator"

services.DetectorPropertiesService.Electronlifetime: 35000

##Need this? 
services.SpaceCharge.InputFilename:        		"ProtoDUNE/HD/SpaceCharge/Sim_NoFluidFlow/v2/SCE_PDHD_Sim_NoFluidFlow_E500_v2.root"
services.SpaceCharge.CalibrationInputFilename:          "ProtoDUNE/HD/SpaceCharge/Sim_NoFluidFlow/v2/SCE_PDHD_Sim_NoFluidFlow_E500_v2.root"
services.SpaceCharge.RepresentationType:               "Splines_TH3"
services.SpaceCharge.service_provider:                  SpaceChargeServiceProtoDUNEhd

# Electron Diverter sim should remain off for HD
services.SpaceCharge.EnableElectronDiverterDistortions: []
services.SpaceCharge.EDZCenter:                         [] # gap center in cm
services.SpaceCharge.EDAXPosOffs:                       []  # X distortion shift scale in cm
services.SpaceCharge.EDBZPosOffs:                       [] #  Z distoriton shift scale in cm
services.SpaceCharge.EDs:                               [] # width of distortion function in cm
services.SpaceCharge.EDChargeLossZLow:                  [] # range in which charge is lost, low end, cm in Z
services.SpaceCharge.EDChargeLossZHigh:                 [] # range in which charge is lost, high end, cm in Z

services.SpaceCharge.EnableCalEfieldSCE: false
services.SpaceCharge.EnableCalSpatialSCE: false
services.SpaceCharge.EnableCorrSCE: false
services.SpaceCharge.EnableSimEfieldSCE: false
services.SpaceCharge.EnableSimSpatialSCE: false

physics.producers.pandora.HitFinderModuleLabel:             "hitpdune"
physics.producers.pandora.GeantModuleLabel:                 "tpcrawdecoder:simpleSC"
physics.producers.pandoraWriter.GeantModuleLabel:           "tpcrawdecoder:simpleSC"
physics.producers.pandoraWriter.HitFinderModuleLabel:       "hitpdune"
physics.producers.pandoraWriter.GeneratorModuleLabel:       "generator"
physics.producers.pandoraTrack.PFParticleLabel:             "pandora"
physics.producers.pandoraShower.PFParticleLabel:            "pandora"
physics.producers.pandorapid.CalorimetryModuleLabel:        "pandoracalo"
physics.producers.pandorapid.TrackModuleLabel:              "pandoraTrack"
physics.producers.pandoracalipid.CalorimetryModuleLabel:        "pandoracali"
physics.producers.pandoracalipid.TrackModuleLabel:              "pandoraTrack"

# Use channel map service for data
services.ExptGeoHelperInterface.ChannelMapClass: "DuneApaChannelMapAlg"
#Forcing Pandora to create either all tracks or all showers on each PFParticle object
physics.producers.pandora2Track.PFParticleLabel:             "pandora"
physics.producers.pandora2Track.UseAllParticles:             true
####The above line forces pandora to fit a track to all PFParticles
physics.producers.pandora2pid.CalorimetryModuleLabel:        "pandora2calo"
physics.producers.pandora2pid.TrackModuleLabel:              "pandora2Track"
physics.producers.pandora2cali.TrackModuleLabel:             "pandora2Track"
physics.producers.pandora2cali.CalorimetryModuleLabel:       "pandora2calo"
physics.producers.pandora2cali.ShowerModuleLabel:             "pandora2Shower"
physics.producers.pandora2cali.ShowerCalorimetryModuleLabel:       "pandora2Showercalo"
physics.producers.pandora2calipid.CalorimetryModuleLabel:    "pandora2cali"
physics.producers.pandora2calipid.TrackModuleLabel:          "pandora2Track"
physics.producers.pandora2Shower.PFParticleLabel:            "pandora"
physics.producers.pandora2Shower.UseAllParticles:            true

