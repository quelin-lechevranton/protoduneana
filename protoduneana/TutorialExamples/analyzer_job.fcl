#include "services_dune.fcl"
#include "clustercounter.fcl"

process_name: TutorialAna

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "tutorial_hist.root" }
  TimeTracker:       {}
  MemoryTracker:     {}
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod_debug
  FileCatalogMetadata:  @local::art_file_catalog_mc
                        @table::protodune_services
}
services.message.destinations.LogStandardOut.threshold: "INFO"

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents: -1
  fileNames: ["input_file.root"]
}

physics:
{
 analyzers:
 {
  clusterana:          @local::cluster_counter
 }

 ana:  [ clusterana ]

 end_paths:     [ ana ]
}

physics.analyzers.clusterana.ClusterModuleLabel: "lineclusterdc"
physics.analyzers.clusterana.MinSize:            15

