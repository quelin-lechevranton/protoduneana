#include "services_dune.fcl"
#include "ProtoDUNEBeamlineUtils.fcl"
#include "protoDUNE_reco_data_prolog.fcl"
#include "protodune_tools_dune.fcl"

process_name: BoxBeamHitsRemoval

services:
{
  #Load the service that manages root files for histograms.
  TFileService: { fileName: "hitremoval.root" }
  TimeTracker:       {}
  MemoryTracker:         { }     #default is one
  RandomNumberGenerator: {}                     #ART native random number generator
                @table::protodune_data_reco_services
  message:      @local::standard_info
  IFDH: {}
}

#services.BackTrackerService.BackTracker.SimChannelModuleLabel: "tpcrawdecoder:simpleSC"
services.SpaceCharge.EnableCalEfieldSCE: true
services.SpaceCharge.EnableCalSpatialSCE: true
#physics.analyzers.hitana.SaveTrackInfo: true

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  1            # Number of events to create
}

#added physics-> productors -> module types

physics:
{
  producers:
  {   
      @table::protoDUNE_reco_data_stage1_producers

      pandoraBoxBeam: @local::protodune_pandora
      pandoraTrackBoxBeam:  @local::dune_pandoraTrackCreation
      pandoraShowerBoxBeam: @local::dune_pandoraShowerCreation
      pandoracaloBoxBeam:   @local::pdune_sp_calodata
      pandoraShowercaloBoxBeam:  @local::pdune_sp_showercalodata

      hitpduneBoxBeam: {
        module_type:          "BoxBeamHitsRemoval"
        RegionsY: [
          [290, 310],
          [320, 340],
          [440, 465],
          [470, 485],
          [580, 610]
        ]
        UpperZCut: 28.
        FlipTracks: true

        PFParticleTag:           "pandora"
        TrackerTag:              "pandoraTrack"
        ShowerTag:               "pandoraShower"
        HitModuleTag:            "hitpdune"
      }
      hitpdune: {module_type:          "HadronHitsRemoval"
        GeneratorTag:         "generator"
        BeamlineUtils:        @local::standard_protodunebeamlineutils

        PFParticleTag:           "pandoraBoxBeam"
        HitModuleLabel:          "hitpduneBoxBeam"
        CalorimetryTagSCE:       "pandoracaloBoxBeam"
        TrackerTag:              "pandoraTrackBoxBeam"
        Limit1: 50.
        Limit2Lower: 50.
        TruncationLength: 10.
      }
  }
  reco: [
         hitpduneBoxBeam,
         pandoraBoxBeam,
         pandoraTrackBoxBeam,
         pandoracaloBoxBeam,
         hitpdune,
         pandora,
         pandoraTrack,
         pandoraShower
        ]
  stream1:  [ out1 ]
  trigger_paths: [reco]
  end_paths:     [stream1]
}

physics.producers.pandoraBoxBeam.HitFinderModuleLabel: "hitpduneBoxBeam"
physics.producers.pandoraTrackBoxBeam.PFParticleLabel:  "pandoraBoxBeam"
physics.producers.pandoraShowerBoxBeam.PFParticleLabel: "pandoraBoxBeam"
physics.producers.pandoracaloBoxBeam.SpacePointModuleLabel: "pandoraBoxBeam"
physics.producers.pandoracaloBoxBeam.TrackModuleLabel: "pandoraTrackBoxBeam"
physics.producers.pandoraShowercaloBoxBeam.SpacePointTag: "pandoraBoxBeam"
physics.producers.pandoraShowercaloBoxBeam.TrackTag: "pandoraShowerBoxBeam"


#physics.producers.pandoracalo:           @local::pdune_sp_calomcsce
#physics.producers.pandoraShowercalo:     @local::pdune_sp_showercalomcsce
#physics.producers.pandora2calo:          @local::pdune_sp_alltrackcalomcsce
#physics.producers.pandora2Showercalo:    @local::pdune_sp_allshowercalomcsce
#physics.producers.pandoracalinoxyzt:     @local::protodunespmcsce_calibrationdedx
#physics.producers.pandora2calinoxyzt:    @local::protodunespmcsce_calibrationdedx
#physics.producers.pandora2calinoxyzt.CalorimetryModuleLabel:    "pandora2calo"
#physics.producers.pandora2calinoxyzt.TrackModuleLabel:          "pandora2Track"

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_box_beam_truncated.root"
   dataTier:    "full-reconstructed"
   compressionLevel: 1
   saveMemoryObjectThreshold: 0
 }
}
#add physics block and imbeded  
outputs.out1.outputCommands: [ "keep *", "drop *_hitpdune_*_Reco1", "drop *_pandora*_*_Reco1", "drop *_anodepiercerst0_*_Reco1", "drop *_op*_*_Reco1", "drop *_emtrkmichelid_*_Reco2" ]
