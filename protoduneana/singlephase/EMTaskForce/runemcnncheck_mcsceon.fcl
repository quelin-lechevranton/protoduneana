#include "services_dune.fcl"
#include "ProtoDUNEBeamCuts.fcl"
#include "ProtoDUNEBeamlineUtils.fcl"
#include "protodune_tools_dune.fcl"

process_name: CheckCNN

services:
{
  #Load the service that manages root files for histograms.
  TFileService: { fileName: "checkcnn.root" }
  TimeTracker:       {}
  MemoryTracker:         { }     #default is one
  RandomNumberGenerator: {}                     #ART native random number generator
                @table::protodune_data_reco_services
  message:      @local::standard_info
  IFDH: {}
}

services.BackTrackerService.BackTracker.SimChannelModuleLabel: "tpcrawdecoder:simpleSC"

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  1            # Number of events to create
}

outputs:
{
}

physics:
{
# producers:{}
# filters:  {} 
 analyzers:{}
 
 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
# reco: [ trackkalmanhitcalo, beziercalo, trackkalmanhitpid, beziertrackerpid]
 #reco: [trackkalmanhitcalo,trackkalmanhitpid, cosmictaggerKalmanHit]
 ana:  [ cnnana ]
 #ana: []
 
 #define the output stream, there could be more than one if using filters 
 stream1:  [  ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 #end_paths:     [ stream1, ana ] 
 end_paths:     [  ana ] 
}

# define the list of LArSoft modules to run through the simulate path

physics.analyzers.cnnana:  {
    module_type:          "EMCNNCheck"
    GeneratorTag:         "generator"
    BeamCuts:             @local::Prod2BeamCuts
    BeamlineUtils:        @local::standard_protodunebeamlineutils
    CNNTag:               "emtrkmichelid:emtrkmichel"
}

physics.analyzers.cnnana1:  {
    module_type:          "EMCNNCheck"
    GeneratorTag:         "generator"
    BeamCuts:             @local::Prod2BeamCuts
    BeamlineUtils:        @local::standard_protodunebeamlineutils
    CNNTag:               "emtrkmichelid1:emtrkmichel"
}

physics.analyzers.cnnana2:  {
    module_type:          "EMCNNCheck"
    GeneratorTag:         "generator"
    BeamCuts:             @local::Prod2BeamCuts
    BeamlineUtils:        @local::standard_protodunebeamlineutils
    CNNTag:               "emtrkmichelid2:emtrkmichel"
}

physics.analyzers.cnnana3:  {
    module_type:          "EMCNNCheck"
    GeneratorTag:         "generator"
    BeamCuts:             @local::Prod2BeamCuts
    BeamlineUtils:        @local::standard_protodunebeamlineutils
    CNNTag:               "emtrkmichelid3:emtrkmichel"
}

services.SpaceCharge.EnableCalEfieldSCE: true
services.SpaceCharge.EnableCalSpatialSCE: true
