#include "BeamEvent.fcl"
#include "services_dune.fcl"
#include "RawDecoder.fcl"

#include "ProtoDUNEDataUtils.fcl"
#include "ProtoDUNEBeamlineUtils.fcl"
#include "ProtoDUNEBeamlineReco.fcl"
#include "ProtoDUNEBeamCuts.fcl"

#include "ProtoDUNEUnstableHVFilter.fcl"
#include "ProtoDUNEFembFilter.fcl"
#
#include "hitfindermodules_dune.fcl"
#include "filters.fcl"
#include "signalservices_dune.fcl"
#include "caldata_dune.fcl"
#include "trackfindermodules_dune.fcl"
#include "ecalibration.fcl"
#include "triggeralgo_service.fcl"
#include "photpropservices_dune.fcl"
#include "protodune_tools_dune.fcl"

process_name: pionanalysis

#proto_savesps:
#{
#  module_type:            "pionanalysis"
#  SpacePointModuleLabel:  "reco3d"
#  BeamModuleLabel:        "beamevent"
#  TrackModuleLabel:       "pandoraTrack"
#  TimeDecoderModuleLabel: "timingrawdecoder:daq"
#}

services:
{
  #Load the service that manages root files for histograms.
  TFileService: { fileName: "Beam.root" }

  TimeTracker:       {}
  MemoryTracker:     {}
  RandomNumberGenerator: {}                     #ART native random number generator
  IFDH :{}

  #@table::protodune_services
  @table::protodune_data_reco_services
  message:      @local::standard_info
  message:      @local::dune_message_services_prod_debug

  FileCatalogMetadata: @local::art_file_catalog_mc
}

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1            # Number of events to create
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "Beam.root"    #default file name, can override from command line with -o or --output
   dataTier: "reconstructed"
   fastCloning: false
 } 
}

physics:
{
 producers:{
  beamevent: @local::proto_beamevent
  }
 filters:  {
    f2: @local::pdsp_fembfilter_beamside
    f1: @local::HVfilter
    #f1: @local::standard_protodunebeamlinefilter_Proton_1GeV
	
 }
 
 #fpath: [f1, f2, f3]
 fpath: [f1, f2] #for the mcc12 test sample v2, hv filter seemed not working

 analyzers:{
   pionanalysis:
   {
     module_type: "pionanalysis"

     SpacePointModuleLabel:  "reco3d"
     BeamCuts:             @local::Prod2BeamCuts
     BeamlineUtils:        @local::standard_protodunebeamlineutils
     BeamModuleLabel:        "beamevent"
     TrackModuleLabel:       "pandoraTrack"
     TimeDecoderModuleLabel: "timingrawdecoder:daq"

     #CalorimetryTag:         "pandoracalo"
     CalorimetryTag:         "pandoracaloSCE"
     TrackerTag:             "pandoraTrack"
     ShowerTag:              "pandoraShower"
     PFParticleTag:          "pandora"
     GeneratorTag:           "generator"
     Verbose:                true
     DataUtils: @local::standard_protodunedatautils
     #beamreco:          @local::beamline_reco

     BeamPars: {
       Momentum: 1.0
     } 

     SelectEvents: [fpath]
   }
 }
 
   reco: [beamevent]
   trigger_paths: [reco,fpath]
 
 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 ana:  [ pionanalysis ]

 #ana: []
 
 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 #trigger_paths: [reco] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 #end_paths:     [ stream1, ana ] 
 end_paths:     [ ana ] 
}

# define the list of LArSoft modules to run through the simulate path
#change TrackModuleLabel and CalorimetryModuleLabel here to "pmtrack" and "pmtrackcalo" or "pandoraTrack and pandoracalo" if required
#physics.analyzers.pionanalysis.TrackModuleLabel:        "pmtrack"
#physics.analyzers.pionanalysis.CalorimetryModuleLabel:  "pmtrackcalo"
#physics.analyzers.pionanalysis.HitsModuleLabel:  "gaushit"
#physics.analyzers.pionanalysis.rawdecoderlabel: "beamevent"

physics.analyzers.ana.SelectEvents: [fpath]
services.IFBeam:  {}
#physics.filters.f1.BeamlineUtils.TOFOffset: 0.
#physics.filters.f1.BeamlineUtils.UseCERNCalibSelection: true
services.PdspChannelMapService:        @local::pdspchannelmap
physics.analyzers.pionanalysis.BeamlineUtils.UseCERNCalibSelection: true


physics.analyzers.pionanalysis.TrackModuleLabel:        "pandoraTrack"
#physics.analyzers.pionanalysis.CalorimetryModuleLabel:  "pandoracalo"
physics.analyzers.pionanalysis.CalorimetryModuleLabel:  "pandoracalo"
#physics.analyzers.pionanalysis.HitsModuleLabel:  "linecluster"
physics.analyzers.pionanalysis.HitsModuleLabel:  "hitpdune"
physics.analyzers.pionanalysis.SaveTrackInfo: true

#physics.analyzers.pionanalysis.CalorimetryTag:  "pandoracalo"
#physics.analyzers.pionanalysis.TrackerTag:        "pandoraTrack"
#physics.analyzers.pionanalysis.ShowerTag: "pandoraShower"
#physics.analyzers.pionanalysis.PFParticleTag: "pandora"
#physics.analyzers.pionanalysis.PGeneratorTag:"generator"
#physics.analyzers.pionanalysis.Verbose: false
#physics.analyzers.pionanalysis.DataUtils: @local::standard_protodunedatautils


#services.SpaceCharge.EnableSimSpatialSCE: true
#services.SpaceCharge.EnableCorrSCE: true
#services.SpaceCharge.EnableSimEfieldSCE: true
#services.SpaceCharge.EnableSimulationSCE: true
